<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:graphShape="clr-namespace:GraphShape.Controls;assembly=GraphShape.Controls"
                    xmlns:converters="clr-namespace:GraphShape.Controls.Converters;assembly=GraphShape.Controls"
                    xmlns:behaviors="clr-namespace:GraphShape.Controls.Behaviors;assembly=GraphShape.Controls">

    <converters:EdgeRouteToPathConverter x:Key="RouteToPathConverter" />

    <SolidColorBrush x:Key="HighlightedVertexBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="HighlightedVertexBackgroundBrush" Color="#FFEEC600" />
    <SolidColorBrush x:Key="HighlightedVertexForegroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="SemiHighlightedSourceVertexBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="SemiHighlightedSourceVertexBackgroundBrush" Color="#FFFC3503" />
    <SolidColorBrush x:Key="SemiHighlightedTargetVertexBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="SemiHighlightedTargetVertexBackgroundBrush" Color="#FF03A1FC" />
    <SolidColorBrush x:Key="HighlightedEdgeBrush" Color="#FFFC3503" />
    <SolidColorBrush x:Key="SemiHighlightedInEdgeBrush" Color="#FFFC3503" />
    <SolidColorBrush x:Key="SemiHighlightedOutEdgeBrush" Color="#FF03A1FC" />

    <Style TargetType="{x:Type graphShape:VertexControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphShape:VertexControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Vertex}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="graphShape:GraphElementBehaviour.HighlightTrigger" Value="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" />
        <Setter Property="behaviors:DragBehavior.IsDragEnabled" Value="True" />
        <Setter Property="behaviors:DragBehavior.X" Value="{Binding Path=(graphShape:GraphCanvas.X), Mode=TwoWay, RelativeSource={RelativeSource Self}}" />
        <Setter Property="behaviors:DragBehavior.Y" Value="{Binding Path=(graphShape:GraphCanvas.Y), Mode=TwoWay, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="white" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Padding" Value="7,3,7,3" />
        <Setter Property="BorderBrush" Value="black" />
        <Style.Triggers>
            <Trigger Property="graphShape:GraphElementBehaviour.IsHighlighted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}" />
            </Trigger>
            <Trigger Property="graphShape:GraphElementBehaviour.IsSemiHighlighted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="graphShape:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                    <Condition Property="graphShape:GraphElementBehaviour.SemiHighlightInfo" Value="Source" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedSourceVertexBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource SemiHighlightedSourceVertexBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="graphShape:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                    <Condition Property="graphShape:GraphElementBehaviour.SemiHighlightInfo" Value="Target" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedTargetVertexBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource SemiHighlightedTargetVertexBackgroundBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type graphShape:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphShape:EdgeControl}">
                    <Path
                        x:Name="edgePath"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="{TemplateBinding StrokeThickness}"
                        MinWidth="1"
                        MinHeight="1"
                        ToolTip="{TemplateBinding ToolTip}">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <MultiBinding Converter="{StaticResource RouteToPathConverter}">
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphShape:GraphCanvas.X)" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphShape:GraphCanvas.Y)" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualWidth" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualHeight" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphShape:GraphCanvas.X)" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphShape:GraphCanvas.Y)" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualWidth" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualHeight" />
                                        <Binding
                                            RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="RoutePoints" />
                                    </MultiBinding>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="graphShape:GraphElementBehaviour.HighlightTrigger"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Edge.Color}" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Edge.Weight}" />
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <Trigger
                Property="graphShape:GraphElementBehaviour.IsHighlighted"
                Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <Trigger
                Property="graphShape:GraphElementBehaviour.IsSemiHighlighted"
                Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="graphShape:GraphElementBehaviour.IsSemiHighlighted"
                        Value="True" />
                    <Condition
                        Property="graphShape:GraphElementBehaviour.SemiHighlightInfo"
                        Value="InEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SemiHighlightedInEdgeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="graphShape:GraphElementBehaviour.IsSemiHighlighted"
                        Value="True" />
                    <Condition
                        Property="graphShape:GraphElementBehaviour.SemiHighlightInfo"
                        Value="OutEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SemiHighlightedOutEdgeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>